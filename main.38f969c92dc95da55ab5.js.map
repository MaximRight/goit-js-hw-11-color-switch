{"version":3,"sources":["webpack:///./js/color-switcher.js","webpack:///./js/countdown-timer.js"],"names":["colors","refs","startBtn","document","querySelector","stopBtn","resetBtn","bodyRef","body","colorSwitcher","intervalId","isActive","start","disabled","this","setInterval","min","max","integer","Number","length","Math","floor","random","style","backgroundColor","stop","clearInterval","addEventListener","bind","valueDays","valueHours","valueMins","valueSecs","btnTimer","alertMessage","targetDate","Date","now","currentTime","deltaTime","updateClockface","textContent","fontSize","time","days","pad","hours","mins","secs","value","String","padStart"],"mappings":"0HAAMA,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,WAOIC,EAAO,CACXC,SAAUC,SAASC,cAAc,6BACjCC,QAASF,SAASC,cAAc,4BAChCE,SAAUH,SAASC,cAAc,6BACjCG,QAASJ,SAASK,MAGdC,EAAgB,CACpBC,WAAY,KACZC,UAAU,EACVC,MAHoB,WAIlBX,EAAKC,SAASW,UAAW,EACrBC,KAAKH,WAITG,KAAKH,UAAW,EAChBG,KAAKJ,WAAaK,aAAY,WAC5B,IAtB6BC,EAAKC,EAsB9BC,GAtByBF,EAsBW,EAtBNC,EAsBSE,OAAOnB,EAAOoB,QArBtDC,KAAKC,MAAMD,KAAKE,UAAYN,EAAMD,EAAM,GAAKA,IAsBhDf,EAAKM,QAAQiB,MAAMC,gBAAkBzB,EAAOkB,KAC3C,OAELQ,KAfoB,WAgBlBzB,EAAKC,SAASW,UAAW,EACzBc,cAAcb,KAAKJ,YACnBI,KAAKJ,WAAa,KAClBI,KAAKH,UAAW,IAIpBV,EAAKC,SAAS0B,iBACZ,QACAnB,EAAcG,MAAMiB,KAAKpB,IAE3BR,EAAKI,QAAQuB,iBAAiB,QAASnB,EAAciB,KAAKG,KAAKpB,IAC/DR,EAAKK,SAASsB,iBACZ,SACA,kBAAO3B,EAAKM,QAAQiB,MAAMC,gBAAkB,gB,cClDxCxB,EAAO,CACX6B,UAAW3B,SAASC,cAAc,6BAClC2B,WAAY5B,SAASC,cAAc,8BACnC4B,UAAW7B,SAASC,cAAc,6BAClC6B,UAAW9B,SAASC,cAAc,6BAClC8B,SAAU/B,SAASC,cAAc,8BACjC+B,aAAchC,SAASC,cAAc,cAKvCH,EAAKiC,SAASN,iBAAiB,SA0C/B,WACE,GAAIjB,EAAU,CACZgB,cAAcjB,GACdA,EAAa,KACb,IAAM0B,EAAaC,KAAKC,MAAQ,IAiBhC,OAhBA5B,EAAaK,aAAY,WACvB,IAAMwB,EAAcF,KAAKC,MACnBE,EAAYJ,EAAaG,EAC/B,GAAIA,GAAeH,EAQjB,OAPAT,cAAcjB,GACd+B,EAAgB,QAChBxC,EAAKkC,aAAaO,YAChB,4EAMJD,EAAgBD,KACf,UACH7B,GAAW,GAIRA,IACHgB,cAAcjB,GACdC,GAAW,EACXD,EAAa,KACbA,EAAaK,aAAY,WACvB,IAAMqB,EAAa,IAAIC,KAAK,yBACtBE,EAAcF,KAAKC,MACnBE,EAAYJ,EAAaG,EAC/B,GAAIA,GAAeH,EAMjB,OALAT,cAAcjB,QACd+B,EAAgB,GAOlBA,EAAgBD,KACf,SAlFPvC,EAAKkC,aAAaX,MAAMmB,SAAW,OAEnC,IAAIhC,GAAW,EAETyB,EAAaC,KAAKC,MAAQ,IAC5B5B,EAAaK,aAAY,WAC3B,IAAMwB,EAAcF,KAAKC,MACnBE,EAAYJ,EAAaG,EAC/B,GAAIA,GAAeH,EAQjB,OAPAT,cAAcjB,GACd+B,EAAgB,QAChBxC,EAAKkC,aAAaO,YAAlB,oFAQFD,EAAgBD,KACf,KAEH,SAASC,EAAgBG,GACvB,IAAMC,EAAOC,EAAIzB,KAAKC,MAAMsB,EAAO,QAC7BG,EAAQD,EACZzB,KAAKC,MAAOsB,EAAO,MAAR,OAEPI,EAAOF,EAAIzB,KAAKC,MAAOsB,EAAO,KAAR,MACtBK,EAAOH,EAAIzB,KAAKC,MAAOsB,EAAO,IAAe,MAEnD3C,EAAK6B,UAAUY,YAAf,GAAgCG,EAChC5C,EAAK8B,WAAWW,YAAhB,GAAiCK,EACjC9C,EAAK+B,UAAUU,YAAf,GAAgCM,EAChC/C,EAAKgC,UAAUS,YAAf,GAAgCO,EAGlC,SAASH,EAAII,GACX,OAAOC,OAAOD,GAAOE,SAAS,EAAG,O","file":"main.38f969c92dc95da55ab5.js","sourcesContent":["const colors = [\n  '#FFFFFF',\n  '#2196F3',\n  '#4CAF50',\n  '#FF9800',\n  '#009688',\n  '#795548',\n];\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst refs = {\n  startBtn: document.querySelector('button[data-action-start]'),\n  stopBtn: document.querySelector('button[data-action-stop]'),\n  resetBtn: document.querySelector('button[data-action-reset]'),\n  bodyRef: document.body,\n};\n\nconst colorSwitcher = {\n  intervalId: null,\n  isActive: false,\n  start() {\n    refs.startBtn.disabled = true;\n    if (this.isActive) {\n      return;\n    }\n\n    this.isActive = true;\n    this.intervalId = setInterval(() => {\n      let integer = randomIntegerFromInterval(0, Number(colors.length));\n      refs.bodyRef.style.backgroundColor = colors[integer];\n    }, 1000);\n  },\n  stop() {\n    refs.startBtn.disabled = false;\n    clearInterval(this.intervalId);\n    this.intervalId = null;\n    this.isActive = false;\n  },\n};\n\nrefs.startBtn.addEventListener(\n  'click',\n  colorSwitcher.start.bind(colorSwitcher),\n);\nrefs.stopBtn.addEventListener('click', colorSwitcher.stop.bind(colorSwitcher));\nrefs.resetBtn.addEventListener(\n  'click',\n  () => (refs.bodyRef.style.backgroundColor = 'whitesmoke'),\n);\n","const refs = {\n  valueDays: document.querySelector('.value[data-value=\"days\"]'),\n  valueHours: document.querySelector('.value[data-value=\"hours\"]'),\n  valueMins: document.querySelector('.value[data-value=\"mins\"]'),\n  valueSecs: document.querySelector('.value[data-value=\"secs\"]'),\n  btnTimer: document.querySelector('button[data-action-change]'),\n  alertMessage: document.querySelector('.js-alert'),\n};\n\n// console.log(refs.alertMessage.textContent);\n// refs.alertMessage.textContent = 'asdsad';\nrefs.btnTimer.addEventListener('click', onBtnClickHandler);\n// refs.alertMessage.style.color = 'red';\nrefs.alertMessage.style.fontSize = '30px';\n\nlet isActive = false;\n\nconst targetDate = Date.now() + 10000;\nlet intervalId = setInterval(() => {\n  const currentTime = Date.now();\n  const deltaTime = targetDate - currentTime;\n  if (currentTime >= targetDate) {\n    clearInterval(intervalId);\n    updateClockface(0);\n    refs.alertMessage.textContent = `По истечении таймера можно вставить модалку или любой popup с рекламой и прочим.`;\n\n    // alert(\n    //   'Вместо алерта можно вставить модалку или любой popup с рекламой и прочим',\n    // );\n    return;\n  }\n\n  updateClockface(deltaTime);\n}, 1000);\n\nfunction updateClockface(time) {\n  const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n  const hours = pad(\n    Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n  );\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n  refs.valueDays.textContent = `${days}`;\n  refs.valueHours.textContent = `${hours}`;\n  refs.valueMins.textContent = `${mins}`;\n  refs.valueSecs.textContent = `${secs}`;\n}\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction onBtnClickHandler() {\n  if (isActive) {\n    clearInterval(intervalId);\n    intervalId = null;\n    const targetDate = Date.now() + 10000;\n    intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = targetDate - currentTime;\n      if (currentTime >= targetDate) {\n        clearInterval(intervalId);\n        updateClockface(0);\n        refs.alertMessage.textContent =\n          'Вместо алерта можно вставить модалку или любой popup с рекламой и прочим';\n        // alert(\n        //   'Вместо алерта можно вставить модалку или любой popup с рекламой и прочим',\n        // );\n        return;\n      }\n      updateClockface(deltaTime);\n    }, 1000);\n    isActive = false;\n    return;\n  }\n\n  if (!isActive) {\n    clearInterval(intervalId);\n    isActive = true;\n    intervalId = null;\n    intervalId = setInterval(() => {\n      const targetDate = new Date('Jan 30, 2022 21:08:50');\n      const currentTime = Date.now();\n      const deltaTime = targetDate - currentTime;\n      if (currentTime >= targetDate) {\n        clearInterval(intervalId);\n        updateClockface(0);\n        // alert(\n        //   'Вместо алерта можно вставить модалку или любой popup с рекламой и прочим',\n        // );\n        return;\n      }\n\n      updateClockface(deltaTime);\n    }, 1000);\n  }\n}\n"],"sourceRoot":""}